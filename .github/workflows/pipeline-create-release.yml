name: Create Release

on:
    release:
        types:
            - created
env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    DOTNET_ROOT: "/home/runner/.dotnet/app"

jobs:
    install-dotnet:
        name: Install .NET
        runs-on: ubuntu-20.04

        steps:
            - uses: actions/checkout@v2
            - name: Setup .NET
              uses: actions/setup-dotnet@v1
              with:
                  dotnet-version: '5.0.x'

    build:
        name: Build
        runs-on: ubuntu-20.04
        needs: install-dotnet

        steps:
            - uses: actions/checkout@v2

            - name: Restore dependencies
              run: dotnet restore

            - name: Build with dotnet
              run: dotnet build --configuration Release

            - name: dotnet publish
              run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}

    deployAzure:
        name: Deploy Azure
        runs-on: ubuntu-20.04
        needs: build

        steps:
            - uses: actions/checkout@master

            - name: remove files
              run: |
                  - rm ${{env.DOTNET_ROOT}}/appsettings.json
                  - rm ${{env.DOTNET_ROOT}}/appsettings.Development.json

            - name: Deploy to Azure Web App
              uses: azure/webapps-deploy@v2
              with:
                  app-name: 'stock-jacksonveroneze'
                  slot-name: 'production'
                  publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
                  package: ${{env.DOTNET_ROOT}}

    genetateDocker:
        name: Generate docker image
        runs-on: ubuntu-20.04
        needs: build

        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Build and push
              run: |
                  echo ${{ secrets.GITHUB_TOKEN }} | docker login https://docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin
                  echo ${{ secrets.TOKEN_REGISTRY_DIGITAL_OCEAN }} | docker login https://registry.digitalocean.com -u ${{ secrets.TOKEN_REGISTRY_DIGITAL_OCEAN }} --password-stdin

                  docker build . -t stock-service:$(echo ${GITHUB_REF:10})

                  docker tag stock-service:$(echo ${GITHUB_REF:10}) docker.pkg.github.com/jacksonveroneze/stock-service/stock-service:$(echo ${GITHUB_REF:10})
                  docker tag stock-service:$(echo ${GITHUB_REF:10}) registry.digitalocean.com/registry-jacksonveroneze/stock-service:$(echo ${GITHUB_REF:10})

                  docker push docker.pkg.github.com/jacksonveroneze/stock-service/stock-service:$(echo ${GITHUB_REF:10})
                  docker push registry.digitalocean.com/registry-jacksonveroneze/stock-service:$(echo ${GITHUB_REF:10})
