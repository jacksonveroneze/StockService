name: Pipeline

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  commitlint:
    name: Commit Lint
    runs-on: Ubuntu-20.04
    
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v2

  build:
      name: Build
      runs-on: Ubuntu-20.04
      needs: commitlint
      
      steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
      
  sonar:
      name: Run Sonar
      runs-on: Ubuntu-20.04
      needs: build
      
      steps:
        - name: Set up JDK 11
          uses: actions/setup-java@v1
          with:
            java-version: 1.11

        - name: Setup .NET Core
          uses: actions/setup-dotnet@v1
          with:
            dotnet-version: 5.0.103

        - uses: actions/checkout@v2
          with:
            ref: ${{ github.event.pull_request.head.sha }}
            fetch-depth: ''
        - run: git fetch --prune --unshallow

        - name: Cache SonarCloud packages
          uses: actions/cache@v1
          with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar

        - name: Cache SonarCloud scanner
          id: cache-sonar-scanner
          uses: actions/cache@v1
          with:
            path: ~/.sonar/scanner
            key: ${{ runner.os }}-sonar-scanner
            restore-keys: ${{ runner.os }}-sonar-scanner

        - name: Install SonarCloud scanner
          if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
          run: dotnet tool update dotnet-sonarscanner --tool-path ~/.sonar/scanner

        - name: Install project dependencies
          run: dotnet restore

        - name: Build and analyze
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          shell: pwsh
          run: |
            dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

            ~/.sonar/scanner/dotnet-sonarscanner begin /k:jacksonveroneze_stock-service /o:jacksonveroneze /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths=./tests/JacksonVeroneze.StockService.Domain.Tests/coverage.opencover.xml /d:sonar.exclusions="./tests/JacksonVeroneze.StockService.Domain.Tests/**" /d:sonar.coverage.exclusions="./tests/JacksonVeroneze.StockService.Domain.Tests/**" /v:${{ github.run_id }}

            dotnet build --configuration Release --no-restore

            ~/.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
