version: "3.7"
services:
    api:
        container_name: api
        image: docker.pkg.github.com/jacksonveroneze/stock-service/stock-service:latest
        tty: true
        build:
            context: .
            dockerfile: Dockerfile
        environment:
            - ASPNETCORE_URLS=http://+:80
            - DOTNET_RUNNING_IN_CONTAINER=true
            - ASPNETCORE_ENVIRONMENT=Docker
            - APP_CONFIG_CONNECION_STRING=
            - APP_CONFIG_APPLICATIONINSIGHTS_INSTRUMENTATIONKEY=
            - APP_CONFIG_URLS_ALLOW_CORS="*;"
            - APP_CONFIG_Auth__Authority=https://jacksonveroneze.auth0.com/
            - APP_CONFIG_Auth__Audience=https://jacksonveroneze.com/
        healthcheck:
            test: [ "CMD", "curl --fail http://api:8080/healh || exit 1" ]
            interval: 10s
            retries: 20
        links:
            - database
            - rabbitmq
        ports:
            - 8080:80

    database:
        container_name: database
        image: mcr.microsoft.com/mssql/server:2019-latest
        environment:
            SA_PASSWORD: localPass@word
            ACCEPT_EULA: Y
        healthcheck:
            test: [ "CMD", "/opt/mssql-tools/bin/sqlcmd", "-Usa", "-PlocalPass@word", "-Q", "select 1" ]
            interval: 10s
            retries: 20
        ports:
            - 1433:1433

    rabbitmq:
        image: rabbitmq:3.8-management-alpine
        container_name: rabbitmq
        environment:
            - RABBITMQ_DEFAULT_USER=admin
            - RABBITMQ_DEFAULT_PASS=admin
        healthcheck:
            test: [ "CMD", "curl --fail http://rabbitmq:15672 || exit 1" ]
            interval: 10s
            retries: 20
        volumes:
            - rabbitmq:/var/lib/rabbitmq
        ports:
            - 15672:15672
            - 5672:5672

volumes:
    database:
    rabbitmq:
