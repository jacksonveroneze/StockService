version: "3.8"
services:
    api:
        container_name: api
        image: docker.pkg.github.com/jacksonveroneze/stock-service/stock-service:latest
        restart: always
        tty: true
        build:
            context: .
            dockerfile: Dockerfile
        environment:
            - ASPNETCORE_URLS=http://+:80
            - DOTNET_RUNNING_IN_CONTAINER=true
            - ASPNETCORE_ENVIRONMENT=Production
            - APP_CONFIG_Urls_Allow_Cors=*;
            - APP_CONFIG_ApplicationInsights_InstrumentationKey=
            - APP_CONFIG_ConnectionStrings__DefaultConnection=Server=database;Database=stock;User Id=sa;Password=localPass@word;
            - APP_CONFIG_Auth__Authority=https://jacksonveroneze.auth0.com/
            - APP_CONFIG_Auth__Audience=https://stock-jacksonveroneze.azurewebsites.net
            - APP_CONFIG_Serilog__MinimumLevel__Default=Debug
            - APP_CONFIG_Serilog__MinimumLevel__Override__Microsoft=Information
            - APP_CONFIG_Serilog__MinimumLevel__Override__System=Information
            - APP_CONFIG_BusType=Memory
            - APP_CONFIG_BusRabbitMq__Host=rabbitmq
            - APP_CONFIG_BusRabbitMq__VirtualHost=stock_service
            - APP_CONFIG_BusRabbitMq__Username=guest
            - APP_CONFIG_BusRabbitMq__Password=guest
            - APP_CONFIG_Jaeger__AgentHost=jaeger
            - APP_CONFIG_Jaeger__AgentPort=6831
            - APP_CONFIG_UrlMailService=
            - ELASTIC_APM_ENABLED=true
            - ELASTIC_APM_SECRET_TOKEN=
            - ELASTIC_APM_SERVER_URL=
            - ELASTIC_APM_CAPTURE_BODY=all
            - ELASTIC_APM_CAPTURE_HEADERS=true
            - ELASTIC_APM_CAPTURE_BODY_CONTENT_TYPES=*
            - ELASTIC_APM_USE_ELASTIC_TRACEPARENT_HEADER=true
            - ELASTIC_APM_LOG_LEVEL=Debug
        healthcheck:
            test: curl --silent --fail http://api/health || exit 1
            interval: 30s
            timeout: 3s
            start_period: 5s
            retries: 3
        links:
            - database
            - rabbitmq
            - jaeger
        depends_on:
            - database
            - rabbitmq
            - jaeger
        ports:
            - 8089:80

    database:
        container_name: database
        image: mcr.microsoft.com/mssql/server:2019-latest
        restart: always
        environment:
            SA_PASSWORD: localPass@word
            ACCEPT_EULA: Y
        healthcheck:
            test: [ "CMD", "/opt/mssql-tools/bin/sqlcmd", "-Usa", "-PlocalPass@word", "-Q", "select 1" ]
            interval: 30s
            timeout: 3s
            start_period: 5s
            retries: 3
        ports:
            - 1433:1433

    rabbitmq:
        container_name: rabbitmq
        image: rabbitmq:3.8-management-alpine
        restart: always
        environment:
            - RABBITMQ_DEFAULT_USER=guest
            - RABBITMQ_DEFAULT_PASS=guest
        healthcheck:
            test: curl --silent --fail http://rabbitmq:15672 || exit 1
            interval: 30s
            timeout: 3s
            start_period: 5s
            retries: 3
        volumes:
            - rabbitmq:/var/lib/rabbitmq
        ports:
            - 15672:15672
            - 5672:5672

    jaeger:
        container_name: jaeger
        image: jaegertracing/all-in-one
        restart: always
        environment:
            - COLLECTOR_ZIPKIN_HTTP_PORT=9411
        healthcheck:
            test: curl --silent --fail http://jaeger:16686 || exit 1
            interval: 30s
            timeout: 3s
            start_period: 5s
            retries: 3
        ports:
            - 5775:5775/udp
            - 6831:6831/udp
            - 6832:6832/udp
            - 5778:5778
            - 16686:16686
            - 14268:14268
            - 9411:9411
volumes:
    database:
    rabbitmq:
